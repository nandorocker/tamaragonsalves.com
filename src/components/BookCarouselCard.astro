---
import { images } from '../data/global';
import type { Language } from '../utils/i18n';

interface LinkGroup {
  type: string;
  links: Array<{
    labelKey: string;
    url: string;
  }>;
}

interface Book {
  id: string;
  author: string;
  imageUrl: string;
  linkGroups: LinkGroup[];
}

export interface Props {
  book: Book;
  bookTranslations: any;
  lang: Language;
}

const { book, bookTranslations, lang } = Astro.props;

// Get book information from translations
const bookData = bookTranslations[book.id] || {};
const linkGroupTitles = bookTranslations.linkGroupTitles || {};
const linkLabels = bookTranslations.linkLabels || {};

// Group links by category for dropdowns
const downloadLinks = book.linkGroups.find(g => g.type === 'download')?.links || [];
const purchaseLinks = book.linkGroups.find(g => g.type === 'purchase')?.links || [];
const interviewLinks = book.linkGroups.find(g => g.type === 'interview')?.links || [];

// Combine download and purchase for "Read and Download"
const readDownloadLinks = [...downloadLinks, ...purchaseLinks];

// Find the first download or purchase link to use as title URL
const getTitleUrl = (): string | null => {
  if (readDownloadLinks.length > 0) {
    return readDownloadLinks[0].url;
  }
  return null;
};

const titleUrl = getTitleUrl();

// Construct image path once for performance
const imagePath = `${images}/${book.imageUrl}`;
---

<article class="book-carousel-item flex flex-col md:flex-row gap-6 items-start">
  <a data-fslightbox="books-home" href={imagePath} class="hover-shift-sm flex-shrink-0 mx-auto md:mx-0">
    <img src={imagePath} alt={bookData.imageAlt || 'Book cover'} class="w-32 md:w-40 rounded shadow-lg">
  </a>

  <div class="flex-1 min-w-0">
    <h5 class="mb-0 book-title">
      {titleUrl ? (
        <a href={titleUrl} target="_blank">{bookData.title}</a>
      ) : (
        bookData.title
      )}
    </h5>
    <p class="mb-3 text-base dark:text-gray-300"><em>{book.author}</em></p>
    
    <p class="text-base mb-4 dark:text-gray-300 line-clamp-3">{bookData.shortDescription || bookData.description}</p>
    
    <div class="flex flex-wrap gap-3">
      {readDownloadLinks.length > 0 && (
        <details class="book-dropdown">
          <summary class="cursor-pointer text-base font-semibold text-pink-700 dark:text-pink-300 hover:text-pink-900 dark:hover:text-pink-100 flex items-center gap-1">
            <span class="icon-before icon-file-pdf"></span>
            Read & Download
            <svg class="w-4 h-4 transition-transform" fill="currentColor" viewBox="0 0 20 20">
              <path fill-rule="evenodd" d="M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z" clip-rule="evenodd" />
            </svg>
          </summary>
          <ul class="mt-2 ml-4 space-y-1">
            {readDownloadLinks.map((link) => (
              <li>
                <a 
                  href={link.url} 
                  target="_blank" 
                  class="text-base text-pink-700 dark:text-pink-300 hover:text-pink-900 dark:hover:text-pink-100 underline"
                  rel="noopener noreferrer"
                >
                  {link.labelKey ? linkLabels[link.labelKey] : link.url}
                </a>
              </li>
            ))}
          </ul>
        </details>
      )}

      {interviewLinks.length > 0 && (
        <details class="book-dropdown">
          <summary class="cursor-pointer text-base font-semibold text-pink-700 dark:text-pink-300 hover:text-pink-900 dark:hover:text-pink-100 flex items-center gap-1">
            <span class="icon-before icon-video"></span>
            Interviews
            <svg class="w-4 h-4 transition-transform" fill="currentColor" viewBox="0 0 20 20">
              <path fill-rule="evenodd" d="M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z" clip-rule="evenodd" />
            </svg>
          </summary>
          <ul class="mt-2 ml-6 space-y-1">
            {interviewLinks.map((link) => (
              <li>
                <a 
                  href={link.url} 
                  target="_blank" 
                  class="text-base text-pink-700 dark:text-pink-300 hover:text-pink-900 dark:hover:text-pink-100 underline"
                  rel="noopener noreferrer"
                >
                  {link.labelKey ? linkLabels[link.labelKey] : link.url}
                </a>
              </li>
            ))}
          </ul>
        </details>
      )}
    </div>
  </div>
</article>

<style>
  .book-dropdown[open] summary svg {
    transform: rotate(180deg);
  }

  .line-clamp-3 {
    display: -webkit-box;
    -webkit-line-clamp: 3;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
</style>
