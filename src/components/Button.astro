---
interface Props {
	variant?: 'primary' | 'secondary' | 'outline';
	size?: 'xs' | 'lg' | 'xl';
	href?: string;
	type?: 'button' | 'submit' | 'reset';
	class?: string;
	[key: string]: any; // Allow any additional HTML attributes
}

const { 
	variant = 'primary', 
	size = 'lg', 
	href, 
	type = 'button',
	class: className = '',
	...rest
} = Astro.props;

// Always include base button class
const variantClass = variant === 'primary' ? 'button' : `button button-${variant}`;

// Map size to CSS class
const sizeClass = `button-${size}`;

const buttonClasses = `${variantClass} ${sizeClass} ${className}`.trim();

const Element = href ? 'a' : 'button';
const elementProps = href ? { href, ...rest } : { type, ...rest };
---

<Element class={buttonClasses} {...elementProps}>
	<slot />
</Element>
